{"version":3,"file":"index-ChLQRhMw.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/contexts/AuthContext.tsx","../../src/lib/utils.ts","../../src/components/ui/LoadingSpinner.tsx","../../src/components/auth/AuthForm.tsx","../../src/services/api.ts","../../src/components/patient/VitalsForm.tsx","../../src/components/ui/Chart.tsx","../../src/components/ui/RiskBadge.tsx","../../src/components/patient/PatientDashboard.tsx","../../src/components/doctor/DoctorDashboard.tsx","../../src/components/profile/ProfileSettings.tsx","../../src/components/layout/BottomNavigation.tsx","../../src/components/layout/Sidebar.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import { createContext, useContext, useEffect, useState, ReactNode } from 'react'\nimport { UserProfile, UserRole } from '../types'\n\n// Mock User type for demo\ninterface User {\n  id: string\n  email: string\n  created_at: string\n  updated_at: string\n}\n\ninterface AuthContextType {\n  user: User | null\n  profile: UserProfile | null\n  loading: boolean\n  signUp: (email: string, password: string, fullName: string, role: UserRole, additionalData?: any) => Promise<void>\n  signIn: (email: string, password: string) => Promise<void>\n  signOut: () => Promise<void>\n  updateProfile: (updates: Partial<UserProfile>) => Promise<void>\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\n\nexport function useAuth() {\n  const context = useContext(AuthContext)\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider')\n  }\n  return context\n}\n\n// Mock storage for demo\nconst mockUsers: any[] = []\nconst mockProfiles: UserProfile[] = []\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const [user, setUser] = useState<User | null>(null)\n  const [profile, setProfile] = useState<UserProfile | null>(null)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    // Check for existing session in localStorage\n    const savedUser = localStorage.getItem('mockUser')\n    const savedProfile = localStorage.getItem('mockProfile')\n    \n    if (savedUser && savedProfile) {\n      setUser(JSON.parse(savedUser))\n      setProfile(JSON.parse(savedProfile))\n    }\n    \n    setLoading(false)\n  }, [])\n\n  const signUp = async (\n    email: string,\n    password: string,\n    fullName: string,\n    role: UserRole,\n    additionalData?: any\n  ) => {\n    // Check if user already exists\n    if (mockUsers.find(u => u.email === email)) {\n      throw new Error('User already exists')\n    }\n\n    const mockUser = {\n      id: `user-${Date.now()}`,\n      email,\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString()\n    }\n\n    const mockProfile: UserProfile = {\n      id: mockUser.id,\n      email,\n      role,\n      full_name: fullName,\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString(),\n      ...additionalData\n    }\n\n    mockUsers.push(mockUser)\n    mockProfiles.push(mockProfile)\n\n    // Auto sign in after signup\n    setUser(mockUser as User)\n    setProfile(mockProfile)\n    \n    // Save to localStorage\n    localStorage.setItem('mockUser', JSON.stringify(mockUser))\n    localStorage.setItem('mockProfile', JSON.stringify(mockProfile))\n  }\n\n  const signIn = async (email: string, password: string) => {\n    const existingUser = mockUsers.find(u => u.email === email)\n    const existingProfile = mockProfiles.find(p => p.email === email)\n\n    if (!existingUser || !existingProfile) {\n      throw new Error('Invalid credentials')\n    }\n\n    setUser(existingUser as User)\n    setProfile(existingProfile)\n    \n    // Save to localStorage\n    localStorage.setItem('mockUser', JSON.stringify(existingUser))\n    localStorage.setItem('mockProfile', JSON.stringify(existingProfile))\n  }\n\n  const signOut = async () => {\n    setUser(null)\n    setProfile(null)\n    localStorage.removeItem('mockUser')\n    localStorage.removeItem('mockProfile')\n  }\n\n  const updateProfile = async (updates: Partial<UserProfile>) => {\n    if (!user || !profile) throw new Error('No user logged in')\n\n    const updatedProfile = { ...profile, ...updates, updated_at: new Date().toISOString() }\n    \n    // Update in mock storage\n    const profileIndex = mockProfiles.findIndex(p => p.id === profile.id)\n    if (profileIndex !== -1) {\n      mockProfiles[profileIndex] = updatedProfile\n    }\n\n    setProfile(updatedProfile)\n    localStorage.setItem('mockProfile', JSON.stringify(updatedProfile))\n  }\n\n  const value = {\n    user,\n    profile,\n    loading,\n    signUp,\n    signIn,\n    signOut,\n    updateProfile,\n  }\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n}","import { clsx, type ClassValue } from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function formatDate(date: Date): string {\n  return new Intl.DateTimeFormat('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n  }).format(date)\n}\n\nexport function formatTime(date: Date): string {\n  return new Intl.DateTimeFormat('en-US', {\n    hour: '2-digit',\n    minute: '2-digit',\n  }).format(date)\n}\n\nexport function calculateWeeksPregnant(lastPeriodDate: Date): number {\n  const today = new Date()\n  const diffTime = Math.abs(today.getTime() - lastPeriodDate.getTime())\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))\n  return Math.floor(diffDays / 7)\n}\n\nexport function getRiskColor(risk: string): string {\n  switch (risk.toLowerCase()) {\n    case 'low':\n      return 'text-success-600 bg-success-50 border-success-200'\n    case 'moderate':\n      return 'text-warning-600 bg-warning-50 border-warning-200'\n    case 'high':\n      return 'text-danger-600 bg-danger-50 border-danger-200'\n    default:\n      return 'text-gray-600 bg-gray-50 border-gray-200'\n  }\n}","import { cn } from '../../lib/utils'\n\ninterface LoadingSpinnerProps {\n  size?: 'sm' | 'md' | 'lg'\n  className?: string\n}\n\nexport function LoadingSpinner({ size = 'md', className }: LoadingSpinnerProps) {\n  const sizeClasses = {\n    sm: 'w-4 h-4',\n    md: 'w-8 h-8',\n    lg: 'w-12 h-12',\n  }\n\n  return (\n    <div className={cn('flex items-center justify-center', className)}>\n      <div\n        className={cn(\n          'animate-spin rounded-full border-2 border-gray-300 border-t-primary-600',\n          sizeClasses[size]\n        )}\n      />\n    </div>\n  )\n}\n\nexport function LoadingScreen() {\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n      <div className=\"text-center\">\n        <LoadingSpinner size=\"lg\" />\n        <p className=\"mt-4 text-gray-600\">Loading...</p>\n      </div>\n    </div>\n  )\n}","import { useState } from 'react'\nimport { useAuth } from '../../contexts/AuthContext'\nimport { UserRole } from '../../types'\nimport { LoadingSpinner } from '../ui/LoadingSpinner'\nimport { Eye, EyeOff, Heart, Shield } from 'lucide-react'\n\nexport function AuthForm() {\n  const [isLogin, setIsLogin] = useState(true)\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [fullName, setFullName] = useState('')\n  const [role, setRole] = useState<UserRole>('patient')\n  const [showPassword, setShowPassword] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState('')\n\n  // Additional fields for patients\n  const [lastPeriodDate, setLastPeriodDate] = useState('')\n  const [dueDate, setDueDate] = useState('')\n\n  // Additional fields for doctors\n  const [licenseNumber, setLicenseNumber] = useState('')\n  const [specialization, setSpecialization] = useState('')\n\n  const { signIn, signUp } = useAuth()\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setLoading(true)\n    setError('')\n\n    try {\n      if (isLogin) {\n        await signIn(email, password)\n      } else {\n        const additionalData: Record<string, string> = {}\n        \n        if (role === 'patient') {\n          if (lastPeriodDate) additionalData.last_period_date = lastPeriodDate\n          if (dueDate) additionalData.due_date = dueDate\n        } else if (role === 'doctor') {\n          if (licenseNumber) additionalData.license_number = licenseNumber\n          if (specialization) additionalData.specialization = specialization\n        }\n\n        await signUp(email, password, fullName, role, additionalData)\n      }\n    } catch (err: unknown) {\n      setError(err instanceof Error ? err.message : 'An error occurred')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen gradient-bg flex items-center justify-center p-4\">\n      <div className=\"w-full max-w-md\">\n        <div className=\"text-center mb-8\">\n          <div className=\"inline-flex items-center justify-center w-16 h-16 bg-primary-600 rounded-full mb-4\">\n            <Heart className=\"w-8 h-8 text-white\" />\n          </div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">HyHTech</h1>\n          <p className=\"text-gray-600 mt-2\">HDP Monitor for Pregnancy Care</p>\n        </div>\n\n        <div className=\"card\">\n          <div className=\"flex mb-6\">\n            <button\n              type=\"button\"\n              onClick={() => setIsLogin(true)}\n              className={`flex-1 py-2 px-4 text-center rounded-lg font-medium transition-colors ${\n                isLogin\n                  ? 'bg-primary-600 text-white'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              Sign In\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => setIsLogin(false)}\n              className={`flex-1 py-2 px-4 text-center rounded-lg font-medium transition-colors ${\n                !isLogin\n                  ? 'bg-primary-600 text-white'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              Sign Up\n            </button>\n          </div>\n\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            {!isLogin && (\n              <>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Full Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={fullName}\n                    onChange={(e) => setFullName(e.target.value)}\n                    className=\"input-field\"\n                    required\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    I am a...\n                  </label>\n                  <div className=\"grid grid-cols-2 gap-3\">\n                    <button\n                      type=\"button\"\n                      onClick={() => setRole('patient')}\n                      className={`p-3 rounded-lg border-2 transition-all ${\n                        role === 'patient'\n                          ? 'border-primary-500 bg-primary-50 text-primary-700'\n                          : 'border-gray-200 hover:border-gray-300'\n                      }`}\n                    >\n                      <Heart className=\"w-6 h-6 mx-auto mb-1\" />\n                      <div className=\"text-sm font-medium\">Patient</div>\n                    </button>\n                    <button\n                      type=\"button\"\n                      onClick={() => setRole('doctor')}\n                      className={`p-3 rounded-lg border-2 transition-all ${\n                        role === 'doctor'\n                          ? 'border-primary-500 bg-primary-50 text-primary-700'\n                          : 'border-gray-200 hover:border-gray-300'\n                      }`}\n                    >\n                      <Shield className=\"w-6 h-6 mx-auto mb-1\" />\n                      <div className=\"text-sm font-medium\">Doctor</div>\n                    </button>\n                  </div>\n                </div>\n              </>\n            )}\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Email\n              </label>\n              <input\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                className=\"input-field\"\n                required\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Password\n              </label>\n              <div className=\"relative\">\n                <input\n                  type={showPassword ? 'text' : 'password'}\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  className=\"input-field pr-10\"\n                  required\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowPassword(!showPassword)}\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n                >\n                  {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                </button>\n              </div>\n            </div>\n\n            {!isLogin && role === 'patient' && (\n              <>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Last Period Date (Optional)\n                  </label>\n                  <input\n                    type=\"date\"\n                    value={lastPeriodDate}\n                    onChange={(e) => setLastPeriodDate(e.target.value)}\n                    className=\"input-field\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Due Date (Optional)\n                  </label>\n                  <input\n                    type=\"date\"\n                    value={dueDate}\n                    onChange={(e) => setDueDate(e.target.value)}\n                    className=\"input-field\"\n                  />\n                </div>\n              </>\n            )}\n\n            {!isLogin && role === 'doctor' && (\n              <>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    License Number (Optional)\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={licenseNumber}\n                    onChange={(e) => setLicenseNumber(e.target.value)}\n                    className=\"input-field\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Specialization (Optional)\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={specialization}\n                    onChange={(e) => setSpecialization(e.target.value)}\n                    className=\"input-field\"\n                    placeholder=\"e.g., Gynecology, Obstetrics\"\n                  />\n                </div>\n              </>\n            )}\n\n            {error && (\n              <div className=\"p-3 bg-danger-50 border border-danger-200 rounded-lg\">\n                <p className=\"text-danger-600 text-sm\">{error}</p>\n              </div>\n            )}\n\n            <button\n              type=\"submit\"\n              disabled={loading}\n              className=\"w-full btn-primary disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {loading ? (\n                <LoadingSpinner size=\"sm\" />\n              ) : (\n                isLogin ? 'Sign In' : 'Create Account'\n              )}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}","import { VitalsInput, RiskPrediction } from '../types'\n\nconst API_BASE_URL = import.meta.env.VITE_API_BASE_URL || 'https://hdp-backend-production.up.railway.app'\n\nexport interface HDPPredictionInput {\n  bp: number\n  swelling: number\n  headache: number\n  age: number\n  weight: number\n  heart_rate: number\n}\n\nexport interface HDPPredictionResponse {\n  input: HDPPredictionInput\n  risk_prediction: number\n  risk_probability: number\n  message: string\n  factors: string[]\n}\n\n// Enhanced clinical prediction model with proper risk calculation\nconst enhancedClinicalModel = {\n  predict: (input: HDPPredictionInput): HDPPredictionResponse => {\n    let riskScore = 0\n    const factors: string[] = []\n    \n    console.log('🔍 Analyzing vitals:', input)\n    \n    // Blood pressure risk (CRITICAL - most important factor for HDP)\n    if (input.bp >= 180) {\n      riskScore += 0.8\n      factors.push(\"Hypertensive crisis (≥180 mmHg) - URGENT\")\n    } else if (input.bp >= 160) {\n      riskScore += 0.65\n      factors.push(\"Severe hypertension (≥160 mmHg)\")\n    } else if (input.bp >= 140) {\n      riskScore += 0.45\n      factors.push(\"Stage 2 hypertension (140-159 mmHg)\")\n    } else if (input.bp >= 130) {\n      riskScore += 0.3\n      factors.push(\"Stage 1 hypertension (130-139 mmHg)\")\n    } else if (input.bp >= 120) {\n      riskScore += 0.15\n      factors.push(\"Elevated blood pressure (120-129 mmHg)\")\n    }\n    \n    // Heart rate analysis (tachycardia indicates stress/complications)\n    if (input.heart_rate >= 130) {\n      riskScore += 0.4\n      factors.push(\"Severe tachycardia (≥130 bpm)\")\n    } else if (input.heart_rate >= 120) {\n      riskScore += 0.3\n      factors.push(\"Significant tachycardia (120-129 bpm)\")\n    } else if (input.heart_rate >= 100) {\n      riskScore += 0.2\n      factors.push(\"Tachycardia (100-119 bpm)\")\n    } else if (input.heart_rate >= 90) {\n      riskScore += 0.1\n      factors.push(\"Elevated heart rate (90-99 bpm)\")\n    }\n    \n    // Symptom-based risks (key HDP indicators)\n    if (input.swelling === 1) {\n      riskScore += 0.25\n      factors.push(\"Edema/swelling present (preeclampsia indicator)\")\n    }\n    \n    if (input.headache === 1) {\n      riskScore += 0.2\n      factors.push(\"Headache symptoms (neurological concern)\")\n    }\n    \n    // Age-related risk factors\n    if (input.age >= 40) {\n      riskScore += 0.25\n      factors.push(\"Advanced maternal age (≥40 years)\")\n    } else if (input.age >= 35) {\n      riskScore += 0.2\n      factors.push(\"Maternal age 35-39 years (increased risk)\")\n    } else if (input.age < 20) {\n      riskScore += 0.15\n      factors.push(\"Young maternal age (<20 years)\")\n    }\n    \n    // Weight-related risk (obesity is major HDP risk factor)\n    if (input.weight >= 120) {\n      riskScore += 0.3\n      factors.push(\"Severe obesity (≥120 kg)\")\n    } else if (input.weight >= 100) {\n      riskScore += 0.25\n      factors.push(\"Morbid obesity (100-119 kg)\")\n    } else if (input.weight >= 85) {\n      riskScore += 0.2\n      factors.push(\"Obesity (85-99 kg)\")\n    } else if (input.weight >= 75) {\n      riskScore += 0.1\n      factors.push(\"Overweight (75-84 kg)\")\n    }\n    \n    // CRITICAL combination factors (multiplicative risk)\n    if (input.bp >= 160 && input.headache === 1) {\n      riskScore += 0.2\n      factors.push(\"⚠️ SEVERE: Hypertension with headache (preeclampsia risk)\")\n    }\n    \n    if (input.bp >= 140 && input.swelling === 1) {\n      riskScore += 0.2\n      factors.push(\"⚠️ HIGH CONCERN: Hypertension with edema\")\n    }\n    \n    if (input.bp >= 160 && input.heart_rate >= 100) {\n      riskScore += 0.25\n      factors.push(\"⚠️ CRITICAL: Severe hypertension with tachycardia\")\n    }\n    \n    if (input.headache === 1 && input.swelling === 1) {\n      riskScore += 0.15\n      factors.push(\"Multiple preeclampsia symptoms present\")\n    }\n    \n    // Age and BP dangerous interaction\n    if (input.age >= 35 && input.bp >= 140) {\n      riskScore += 0.15\n      factors.push(\"Advanced age with hypertension (high-risk combination)\")\n    }\n    \n    // Triple risk factor (very dangerous)\n    if (input.bp >= 140 && input.headache === 1 && input.swelling === 1) {\n      riskScore += 0.2\n      factors.push(\"🚨 TRIPLE RISK: Hypertension + Headache + Edema\")\n    }\n    \n    console.log('📊 Calculated risk score:', riskScore)\n    console.log('🎯 Risk factors identified:', factors)\n    \n    // Ensure minimum risk for concerning vitals\n    if (input.bp >= 140 && riskScore < 0.4) {\n      riskScore = 0.4 // Minimum 40% for hypertension\n    }\n    if (input.bp >= 160 && riskScore < 0.6) {\n      riskScore = 0.6 // Minimum 60% for severe hypertension\n    }\n    \n    // Cap maximum risk\n    riskScore = Math.min(riskScore, 0.95)\n    \n    // Determine risk level and prediction\n    let prediction: number\n    let riskLevel: string\n    \n    if (riskScore >= 0.7) {\n      prediction = 1\n      riskLevel = \"🚨 CRITICAL HIGH\"\n    } else if (riskScore >= 0.5) {\n      prediction = 1\n      riskLevel = \"⚠️ HIGH\"\n    } else if (riskScore >= 0.3) {\n      prediction = 1\n      riskLevel = \"⚠️ MODERATE-HIGH\"\n    } else if (riskScore >= 0.2) {\n      prediction = 0\n      riskLevel = \"⚠️ MODERATE\"\n    } else {\n      prediction = 0\n      riskLevel = \"✅ LOW\"\n    }\n    \n    const result = {\n      input,\n      risk_prediction: prediction,\n      risk_probability: riskScore,\n      message: `${riskLevel} risk of HDP detected`,\n      factors\n    }\n    \n    console.log('🎯 Final prediction result:', result)\n    return result\n  }\n}\n\nexport async function predictHDPRisk(vitals: VitalsInput): Promise<RiskPrediction> {\n  try {\n    // Get patient age from profile or use realistic default\n    const patientAge = 30 // In real app, get from user profile\n    \n    // Convert vitals to the format expected by the ML model\n    const input: HDPPredictionInput = {\n      bp: vitals.systolic_bp, // Use systolic BP as primary BP indicator\n      swelling: vitals.symptoms.includes('swelling') ? 1 : 0,\n      headache: vitals.symptoms.includes('headache') ? 1 : 0,\n      age: patientAge,\n      weight: vitals.weight,\n      heart_rate: vitals.heart_rate,\n    }\n\n    console.log('🔄 Sending prediction request with input:', input)\n\n    // Try to call the actual API first\n    try {\n      const response = await fetch(`${API_BASE_URL}/predict`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(input),\n      })\n\n      if (response.ok) {\n        const data: HDPPredictionResponse = await response.json()\n        console.log('✅ API prediction response:', data)\n        \n        // Convert the response to our RiskPrediction format\n        const riskLevel = data.risk_prediction === 1 ? \n          (data.risk_probability >= 0.7 ? 'high' : 'moderate') : \n          (data.risk_probability >= 0.3 ? 'moderate' : 'low')\n\n        return {\n          id: crypto.randomUUID(),\n          patient_id: vitals.patient_id,\n          vitals_id: vitals.id || crypto.randomUUID(),\n          risk_level: riskLevel,\n          risk_score: data.risk_probability,\n          factors: data.factors,\n          created_at: new Date().toISOString(),\n        }\n      } else {\n        console.log('⚠️ API response not ok, using enhanced clinical model')\n      }\n    } catch (apiError) {\n      console.log('⚠️ API not available, using enhanced clinical model:', apiError)\n    }\n\n    // Use enhanced clinical model (primary prediction system)\n    const data = enhancedClinicalModel.predict(input)\n    console.log('🧠 Enhanced clinical model prediction:', data)\n    \n    // More accurate risk level mapping\n    const riskLevel = data.risk_prediction === 1 ? \n      (data.risk_probability >= 0.7 ? 'high' : 'moderate') : \n      (data.risk_probability >= 0.3 ? 'moderate' : 'low')\n\n    return {\n      id: crypto.randomUUID(),\n      patient_id: vitals.patient_id,\n      vitals_id: vitals.id || crypto.randomUUID(),\n      risk_level: riskLevel,\n      risk_score: data.risk_probability,\n      factors: data.factors,\n      created_at: new Date().toISOString(),\n    }\n  } catch (error) {\n    console.error('❌ Error predicting HDP risk:', error)\n    \n    // Ultimate fallback with proper risk assessment\n    let basicRisk = 0.1 // Base 10% risk\n    const basicFactors: string[] = []\n    \n    // Basic clinical assessment\n    if (vitals.systolic_bp >= 160) {\n      basicRisk = 0.7\n      basicFactors.push('Severe hypertension detected')\n    } else if (vitals.systolic_bp >= 140) {\n      basicRisk = 0.5\n      basicFactors.push('Hypertension detected')\n    } else if (vitals.systolic_bp >= 130) {\n      basicRisk = 0.3\n      basicFactors.push('Elevated blood pressure')\n    }\n    \n    if (vitals.symptoms.includes('headache')) {\n      basicRisk += 0.2\n      basicFactors.push('Headache symptoms')\n    }\n    \n    if (vitals.symptoms.includes('swelling')) {\n      basicRisk += 0.2\n      basicFactors.push('Swelling/edema present')\n    }\n    \n    basicRisk = Math.min(basicRisk, 0.9)\n    \n    return {\n      id: crypto.randomUUID(),\n      patient_id: vitals.patient_id,\n      vitals_id: vitals.id || crypto.randomUUID(),\n      risk_level: basicRisk >= 0.5 ? 'high' : basicRisk >= 0.3 ? 'moderate' : 'low',\n      risk_score: basicRisk,\n      factors: basicFactors.length > 0 ? basicFactors : ['Basic health assessment completed'],\n      created_at: new Date().toISOString(),\n    }\n  }\n}","import { useState } from 'react'\nimport { VitalsInput, RiskPrediction } from '../../types'\nimport { useAuth } from '../../contexts/AuthContext'\nimport { predictHDPRisk } from '../../services/api'\nimport { LoadingSpinner } from '../ui/LoadingSpinner'\nimport { Heart, Activity, Weight, AlertCircle } from 'lucide-react'\n\ninterface VitalsFormProps {\n  onSubmit: (vitals: VitalsInput, riskPrediction: RiskPrediction) => void\n}\n\nconst SYMPTOM_OPTIONS = [\n  'headache',\n  'blurred_vision',\n  'swelling',\n  'nausea',\n  'dizziness',\n  'chest_pain',\n  'shortness_of_breath',\n]\n\nexport function VitalsForm({ onSubmit }: VitalsFormProps) {\n  const { user } = useAuth()\n  const [loading, setLoading] = useState(false)\n  const [formData, setFormData] = useState({\n    systolic_bp: '',\n    diastolic_bp: '',\n    heart_rate: '',\n    weight: '',\n    symptoms: [] as string[],\n    medication_taken: false,\n    notes: '',\n  })\n\n  const handleSymptomChange = (symptom: string, checked: boolean) => {\n    setFormData(prev => ({\n      ...prev,\n      symptoms: checked\n        ? [...prev.symptoms, symptom]\n        : prev.symptoms.filter(s => s !== symptom)\n    }))\n  }\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    if (!user) return\n\n    console.log('📝 Form data being submitted:', formData)\n\n    setLoading(true)\n    try {\n      const vitalsData: VitalsInput = {\n        id: `vitals-${Date.now()}`,\n        patient_id: user.id,\n        date: new Date().toISOString().split('T')[0],\n        systolic_bp: parseInt(formData.systolic_bp),\n        diastolic_bp: parseInt(formData.diastolic_bp),\n        heart_rate: parseInt(formData.heart_rate),\n        weight: parseFloat(formData.weight),\n        symptoms: formData.symptoms,\n        medication_taken: formData.medication_taken,\n        notes: formData.notes,\n        created_at: new Date().toISOString(),\n      }\n\n      console.log('📊 Submitting vitals for AI analysis:', vitalsData)\n\n      // Save vitals to mock storage\n      mockVitalsStorage.push(vitalsData)\n\n      // Get AI risk prediction\n      console.log('🤖 Getting AI risk prediction...')\n      const riskPrediction = await predictHDPRisk(vitalsData)\n      console.log('🎯 Risk prediction result:', riskPrediction)\n\n      // Save risk prediction to mock storage\n      mockRiskStorage.push(riskPrediction)\n\n      // Pass both vitals and risk prediction to parent\n      onSubmit(vitalsData, riskPrediction)\n\n      // Reset form\n      setFormData({\n        systolic_bp: '',\n        diastolic_bp: '',\n        heart_rate: '',\n        weight: '',\n        symptoms: [],\n        medication_taken: false,\n        notes: '',\n      })\n    } catch (error) {\n      console.error('Error submitting vitals:', error)\n      alert('Error submitting vitals. Please try again.')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"flex items-center gap-3 mb-6\">\n        <div className=\"p-2 bg-primary-100 rounded-lg\">\n          <Activity className=\"w-6 h-6 text-primary-600\" />\n        </div>\n        <h2 className=\"text-xl font-semibold text-gray-900\">Daily Vitals</h2>\n      </div>\n\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              <Heart className=\"w-4 h-4 inline mr-1\" />\n              Systolic BP (mmHg)\n            </label>\n            <input\n              type=\"number\"\n              value={formData.systolic_bp}\n              onChange={(e) => setFormData(prev => ({ ...prev, systolic_bp: e.target.value }))}\n              className=\"input-field\"\n              placeholder=\"120\"\n              min=\"80\"\n              max=\"200\"\n              required\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              <Heart className=\"w-4 h-4 inline mr-1\" />\n              Diastolic BP (mmHg)\n            </label>\n            <input\n              type=\"number\"\n              value={formData.diastolic_bp}\n              onChange={(e) => setFormData(prev => ({ ...prev, diastolic_bp: e.target.value }))}\n              className=\"input-field\"\n              placeholder=\"80\"\n              min=\"50\"\n              max=\"120\"\n              required\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              <Activity className=\"w-4 h-4 inline mr-1\" />\n              Heart Rate (bpm)\n            </label>\n            <input\n              type=\"number\"\n              value={formData.heart_rate}\n              onChange={(e) => setFormData(prev => ({ ...prev, heart_rate: e.target.value }))}\n              className=\"input-field\"\n              placeholder=\"72\"\n              min=\"50\"\n              max=\"150\"\n              required\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              <Weight className=\"w-4 h-4 inline mr-1\" />\n              Weight (kg)\n            </label>\n            <input\n              type=\"number\"\n              step=\"0.1\"\n              value={formData.weight}\n              onChange={(e) => setFormData(prev => ({ ...prev, weight: e.target.value }))}\n              className=\"input-field\"\n              placeholder=\"65.5\"\n              min=\"30\"\n              max=\"150\"\n              required\n            />\n          </div>\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n            <AlertCircle className=\"w-4 h-4 inline mr-1\" />\n            Symptoms (select all that apply)\n          </label>\n          <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3\">\n            {SYMPTOM_OPTIONS.map((symptom) => (\n              <label key={symptom} className=\"flex items-center space-x-2 cursor-pointer\">\n                <input\n                  type=\"checkbox\"\n                  checked={formData.symptoms.includes(symptom)}\n                  onChange={(e) => handleSymptomChange(symptom, e.target.checked)}\n                  className=\"rounded border-gray-300 text-primary-600 focus:ring-primary-500\"\n                />\n                <span className=\"text-sm text-gray-700 capitalize\">\n                  {symptom.replace('_', ' ')}\n                </span>\n              </label>\n            ))}\n          </div>\n        </div>\n\n        <div>\n          <label className=\"flex items-center space-x-2 cursor-pointer\">\n            <input\n              type=\"checkbox\"\n              checked={formData.medication_taken}\n              onChange={(e) => setFormData(prev => ({ ...prev, medication_taken: e.target.checked }))}\n              className=\"rounded border-gray-300 text-primary-600 focus:ring-primary-500\"\n            />\n            <span className=\"text-sm font-medium text-gray-700\">\n              Medication taken today\n            </span>\n          </label>\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Notes (optional)\n          </label>\n          <textarea\n            value={formData.notes}\n            onChange={(e) => setFormData(prev => ({ ...prev, notes: e.target.value }))}\n            className=\"input-field\"\n            rows={3}\n            placeholder=\"Any additional notes about how you're feeling today...\"\n          />\n        </div>\n\n        <button\n          type=\"submit\"\n          disabled={loading}\n          className=\"w-full btn-primary disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          {loading ? (\n            <div className=\"flex items-center justify-center gap-2\">\n              <LoadingSpinner size=\"sm\" />\n              <span>Analyzing with AI...</span>\n            </div>\n          ) : (\n            'Submit Vitals & Get AI Risk Assessment'\n          )}\n        </button>\n      </form>\n    </div>\n  )\n}","import {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ChartOptions,\n} from 'chart.js'\nimport { Line } from 'react-chartjs-2'\nimport type { ChartDataPoint } from '../../types'\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n)\n\ninterface ChartProps {\n  data: ChartDataPoint[]\n  title: string\n  color: string\n  unit?: string\n  height?: number\n}\n\nexport function Chart({ data, title, color, unit = '', height = 300 }: ChartProps) {\n  const chartData = {\n    labels: data.map(point => new Date(point.date).toLocaleDateString()),\n    datasets: [\n      {\n        label: title,\n        data: data.map(point => point.value),\n        borderColor: color,\n        backgroundColor: color + '20',\n        borderWidth: 2,\n        fill: true,\n        tension: 0.4,\n        pointBackgroundColor: color,\n        pointBorderColor: '#fff',\n        pointBorderWidth: 2,\n        pointRadius: 4,\n        pointHoverRadius: 6,\n      },\n    ],\n  }\n\n  const options: ChartOptions<'line'> = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      title: {\n        display: true,\n        text: title,\n        font: {\n          size: 16,\n          weight: 'bold',\n        },\n        color: '#374151',\n      },\n      tooltip: {\n        backgroundColor: '#fff',\n        titleColor: '#374151',\n        bodyColor: '#6b7280',\n        borderColor: '#e5e7eb',\n        borderWidth: 1,\n        cornerRadius: 8,\n        displayColors: false,\n        callbacks: {\n          label: (context) => `${context.parsed.y}${unit}`,\n        },\n      },\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false,\n        },\n        ticks: {\n          color: '#6b7280',\n          font: {\n            size: 12,\n          },\n        },\n      },\n      y: {\n        grid: {\n          color: '#f3f4f6',\n        },\n        ticks: {\n          color: '#6b7280',\n          font: {\n            size: 12,\n          },\n          callback: (value) => `${value}${unit}`,\n        },\n      },\n    },\n    elements: {\n      point: {\n        hoverBackgroundColor: color,\n      },\n    },\n  }\n\n  if (data.length === 0) {\n    return (\n      <div \n        className=\"flex items-center justify-center bg-gray-50 rounded-lg border-2 border-dashed border-gray-300\"\n        style={{ height }}\n      >\n        <p className=\"text-gray-500\">No data available</p>\n      </div>\n    )\n  }\n\n  return (\n    <div style={{ height }}>\n      <Line data={chartData} options={options} />\n    </div>\n  )\n}","import { cn, getRiskColor } from '../../lib/utils'\nimport { AlertTriangle, CheckCircle, XCircle } from 'lucide-react'\n\ninterface RiskBadgeProps {\n  risk: 'low' | 'moderate' | 'high'\n  score?: number\n  className?: string\n}\n\nexport function RiskBadge({ risk, score, className }: RiskBadgeProps) {\n  const getRiskIcon = () => {\n    switch (risk) {\n      case 'low':\n        return <CheckCircle className=\"w-4 h-4\" />\n      case 'moderate':\n        return <AlertTriangle className=\"w-4 h-4\" />\n      case 'high':\n        return <XCircle className=\"w-4 h-4\" />\n    }\n  }\n\n  const getRiskText = () => {\n    switch (risk) {\n      case 'low':\n        return 'Low Risk'\n      case 'moderate':\n        return 'Moderate Risk'\n      case 'high':\n        return 'High Risk'\n    }\n  }\n\n  return (\n    <div\n      className={cn(\n        'inline-flex items-center gap-2 px-3 py-1 rounded-full text-sm font-medium border',\n        getRiskColor(risk),\n        className\n      )}\n    >\n      {getRiskIcon()}\n      <span>{getRiskText()}</span>\n      {score !== undefined && (\n        <span className=\"text-xs opacity-75\">\n          ({Math.round(score * 100)}%)\n        </span>\n      )}\n    </div>\n  )\n}","import { useState, useEffect, useCallback } from 'react'\nimport { useAuth } from '../../contexts/AuthContext'\nimport { VitalsInput, RiskPrediction, TrendData } from '../../types'\nimport { predictHDPRisk } from '../../services/api'\nimport { VitalsForm } from './VitalsForm'\nimport { Chart } from '../ui/Chart'\nimport { RiskBadge } from '../ui/RiskBadge'\nimport { LoadingSpinner } from '../ui/LoadingSpinner'\nimport { calculateWeeksPregnant } from '../../lib/utils'\nimport { Heart, MessageCircle, TrendingUp, Calendar, Baby, AlertCircle } from 'lucide-react'\n\n// Mock data for demo\nconst mockVitals: VitalsInput[] = []\nlet mockRisk: RiskPrediction | null = null\n\nexport function PatientDashboard() {\n  const { profile } = useAuth()\n  const [vitals, setVitals] = useState<VitalsInput[]>([])\n  const [latestRisk, setLatestRisk] = useState<RiskPrediction | null>(null)\n  const [trendData, setTrendData] = useState<TrendData>({\n    systolic: [],\n    diastolic: [],\n    heart_rate: [],\n    weight: [],\n  })\n  const [loading, setLoading] = useState(true)\n  const [showVitalsForm, setShowVitalsForm] = useState(false)\n\n  useEffect(() => {\n    if (profile) {\n      fetchVitals()\n    }\n  }, [profile, fetchVitals])\n\n  const fetchVitals = useCallback(async () => {\n    if (!profile) return\n\n    // Use mock data for demo - start with empty array\n    setVitals(mockVitals)\n    generateTrendData(mockVitals)\n    \n    // Get latest risk if vitals exist\n    if (mockVitals.length > 0) {\n      await fetchLatestRisk()\n    }\n    \n    setLoading(false)\n  }, [profile])\n\n  const fetchLatestRisk = useCallback(async () => {\n    if (!profile) return\n\n    // Get the latest risk from mock storage or calculate it\n    if (mockRisk) {\n      setLatestRisk(mockRisk)\n    } else if (vitals.length > 0) {\n      // Calculate risk for the latest vitals\n      try {\n        const latestVitals = vitals[0]\n        const riskPrediction = await predictHDPRisk(latestVitals)\n        mockRisk = riskPrediction\n        setLatestRisk(riskPrediction)\n      } catch (error) {\n        console.error('Error calculating risk:', error)\n      }\n    }\n  }, [profile, vitals])\n\n  const generateTrendData = (vitalsData: VitalsInput[]) => {\n    const trends: TrendData = {\n      systolic: [],\n      diastolic: [],\n      heart_rate: [],\n      weight: [],\n    }\n\n    vitalsData.reverse().forEach((vital) => {\n      const date = vital.date\n      trends.systolic.push({ date, value: vital.systolic_bp })\n      trends.diastolic.push({ date, value: vital.diastolic_bp })\n      trends.heart_rate.push({ date, value: vital.heart_rate })\n      trends.weight.push({ date, value: vital.weight })\n    })\n\n    setTrendData(trends)\n  }\n\n  const handleVitalsSubmit = async (newVitals: VitalsInput, riskPrediction: RiskPrediction) => {\n    console.log('📊 Dashboard received new vitals:', newVitals)\n    console.log('🎯 Dashboard received risk prediction:', riskPrediction)\n    \n    // Update vitals\n    const updatedVitals = [newVitals, ...vitals]\n    setVitals(updatedVitals)\n    generateTrendData(updatedVitals)\n    \n    // Update risk prediction\n    mockRisk = riskPrediction\n    setLatestRisk(riskPrediction)\n    \n    // Update mock storage\n    mockVitals.unshift(newVitals)\n    \n    setShowVitalsForm(false)\n  }\n\n  const getWeeksPregnant = () => {\n    if (!profile?.last_period_date) return null\n    return calculateWeeksPregnant(new Date(profile.last_period_date))\n  }\n\n  const handleContactDoctor = () => {\n    // In a real app, this would open a chat or email modal\n    alert('Contact doctor feature would be implemented here')\n  }\n\n  if (loading) {\n    return <LoadingSpinner />\n  }\n\n  const weeksPregnant = getWeeksPregnant()\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"gradient-bg border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">\n                Welcome back, {profile?.full_name?.split(' ')[0]}!\n              </h1>\n              {weeksPregnant && (\n                <div className=\"flex items-center gap-2 mt-2 text-gray-600\">\n                  <Baby className=\"w-4 h-4\" />\n                  <span>Week {weeksPregnant} of pregnancy</span>\n                </div>\n              )}\n            </div>\n            <button\n              onClick={handleContactDoctor}\n              className=\"btn-primary flex items-center gap-2\"\n            >\n              <MessageCircle className=\"w-4 h-4\" />\n              Contact Doctor\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Main Content */}\n          <div className=\"lg:col-span-2 space-y-8\">\n            {/* Quick Stats */}\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              <div className=\"card\">\n                <div className=\"flex items-center gap-3\">\n                  <div className=\"p-2 bg-primary-100 rounded-lg\">\n                    <Heart className=\"w-6 h-6 text-primary-600\" />\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-600\">Latest BP</p>\n                    <p className=\"text-xl font-semibold\">\n                      {vitals[0] ? `${vitals[0].systolic_bp}/${vitals[0].diastolic_bp}` : '--/--'}\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"card\">\n                <div className=\"flex items-center gap-3\">\n                  <div className=\"p-2 bg-success-100 rounded-lg\">\n                    <TrendingUp className=\"w-6 h-6 text-success-600\" />\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-600\">Heart Rate</p>\n                    <p className=\"text-xl font-semibold\">\n                      {vitals[0] ? `${vitals[0].heart_rate} bpm` : '-- bpm'}\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"card\">\n                <div className=\"flex items-center gap-3\">\n                  <div className=\"p-2 bg-secondary-100 rounded-lg\">\n                    <Calendar className=\"w-6 h-6 text-secondary-600\" />\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-600\">Entries</p>\n                    <p className=\"text-xl font-semibold\">{vitals.length}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Vitals Input */}\n            {showVitalsForm ? (\n              <VitalsForm onSubmit={handleVitalsSubmit} />\n            ) : (\n              <div className=\"card\">\n                <div className=\"text-center py-8\">\n                  <Heart className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n                    Ready to log your vitals?\n                  </h3>\n                  <p className=\"text-gray-600 mb-4\">\n                    Track your daily health metrics to monitor your pregnancy\n                  </p>\n                  <button\n                    onClick={() => setShowVitalsForm(true)}\n                    className=\"btn-primary\"\n                  >\n                    Log Today's Vitals\n                  </button>\n                </div>\n              </div>\n            )}\n\n            {/* Trends Charts */}\n            {vitals.length > 0 && (\n              <div className=\"space-y-6\">\n                <h2 className=\"text-xl font-semibold text-gray-900\">Health Trends</h2>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div className=\"card\">\n                    <Chart\n                      data={trendData.systolic}\n                      title=\"Systolic Blood Pressure\"\n                      color=\"#dc2626\"\n                      unit=\" mmHg\"\n                      height={250}\n                    />\n                  </div>\n                  \n                  <div className=\"card\">\n                    <Chart\n                      data={trendData.diastolic}\n                      title=\"Diastolic Blood Pressure\"\n                      color=\"#ea580c\"\n                      unit=\" mmHg\"\n                      height={250}\n                    />\n                  </div>\n                  \n                  <div className=\"card\">\n                    <Chart\n                      data={trendData.heart_rate}\n                      title=\"Heart Rate\"\n                      color=\"#0ea5e9\"\n                      unit=\" bpm\"\n                      height={250}\n                    />\n                  </div>\n                  \n                  <div className=\"card\">\n                    <Chart\n                      data={trendData.weight}\n                      title=\"Weight\"\n                      color=\"#8b5cf6\"\n                      unit=\" kg\"\n                      height={250}\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Sidebar */}\n          <div className=\"space-y-6\">\n            {/* AI Risk Assessment */}\n            <div className=\"card\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n                AI Risk Assessment\n              </h3>\n              {latestRisk ? (\n                <div className=\"space-y-4\">\n                  <RiskBadge \n                    risk={latestRisk.risk_level} \n                    score={latestRisk.risk_score}\n                  />\n                  {latestRisk.factors.length > 0 && (\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-700 mb-2\">\n                        Risk Factors:\n                      </p>\n                      <ul className=\"text-sm text-gray-600 space-y-1\">\n                        {latestRisk.factors.map((factor, index) => (\n                          <li key={index} className=\"flex items-start gap-2\">\n                            <span className=\"w-1 h-1 bg-gray-400 rounded-full mt-2 flex-shrink-0\" />\n                            {factor}\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                  )}\n                  <p className=\"text-xs text-gray-500\">\n                    Last updated: {new Date(latestRisk.created_at).toLocaleDateString()}\n                  </p>\n                </div>\n              ) : (\n                <div className=\"text-center py-4\">\n                  <p className=\"text-gray-500\">No risk assessment available</p>\n                  <p className=\"text-sm text-gray-400 mt-1\">\n                    Log your vitals to get a risk assessment\n                  </p>\n                </div>\n              )}\n            </div>\n\n            {/* Recent Activity */}\n            <div className=\"card\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n                Recent Activity\n              </h3>\n              {vitals.length > 0 ? (\n                <div className=\"space-y-3\">\n                  {vitals.slice(0, 5).map((vital, index) => (\n                    <div key={vital.id || index} className=\"flex items-center justify-between py-2 border-b border-gray-100 last:border-b-0\">\n                      <div>\n                        <p className=\"text-sm font-medium text-gray-900\">\n                          Vitals logged\n                        </p>\n                        <p className=\"text-xs text-gray-500\">\n                          {new Date(vital.date).toLocaleDateString()}\n                        </p>\n                      </div>\n                      <div className=\"text-right\">\n                        <p className=\"text-sm text-gray-600\">\n                          {vital.systolic_bp}/{vital.diastolic_bp}\n                        </p>\n                        <p className=\"text-xs text-gray-500\">\n                          {vital.heart_rate} bpm\n                        </p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <p className=\"text-gray-500 text-center py-4\">\n                  No activity yet\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}","import { useState, useEffect, useCallback } from 'react'\nimport { useAuth } from '../../contexts/AuthContext'\nimport { UserProfile, VitalsInput, RiskPrediction } from '../../types'\nimport { Chart } from '../ui/Chart'\nimport { RiskBadge } from '../ui/RiskBadge'\nimport { LoadingSpinner } from '../ui/LoadingSpinner'\nimport { Users, AlertTriangle, Search } from 'lucide-react'\n\ninterface PatientWithLatestVitals extends UserProfile {\n  latest_vitals?: VitalsInput\n  latest_risk?: RiskPrediction\n  vitals_count?: number\n}\n\n// Mock data for demo\nconst mockPatients: PatientWithLatestVitals[] = [\n  {\n    id: 'patient-1',\n    email: 'patient1@example.com',\n    role: 'patient',\n    full_name: 'Sarah Johnson',\n    created_at: new Date().toISOString(),\n    updated_at: new Date().toISOString(),\n    latest_vitals: {\n      id: '1',\n      patient_id: 'patient-1',\n      date: new Date().toISOString().split('T')[0],\n      systolic_bp: 140,\n      diastolic_bp: 90,\n      heart_rate: 85,\n      weight: 70,\n      symptoms: ['headache'],\n      medication_taken: true,\n      created_at: new Date().toISOString()\n    },\n    latest_risk: {\n      id: '1',\n      patient_id: 'patient-1',\n      vitals_id: '1',\n      risk_level: 'high',\n      risk_score: 0.8,\n      factors: ['High blood pressure', 'Headache symptoms'],\n      created_at: new Date().toISOString()\n    },\n    vitals_count: 15\n  },\n  {\n    id: 'patient-2',\n    email: 'patient2@example.com',\n    role: 'patient',\n    full_name: 'Emily Davis',\n    created_at: new Date().toISOString(),\n    updated_at: new Date().toISOString(),\n    latest_vitals: {\n      id: '2',\n      patient_id: 'patient-2',\n      date: new Date().toISOString().split('T')[0],\n      systolic_bp: 115,\n      diastolic_bp: 75,\n      heart_rate: 68,\n      weight: 62,\n      symptoms: [],\n      medication_taken: false,\n      created_at: new Date().toISOString()\n    },\n    latest_risk: {\n      id: '2',\n      patient_id: 'patient-2',\n      vitals_id: '2',\n      risk_level: 'low',\n      risk_score: 0.2,\n      factors: [],\n      created_at: new Date().toISOString()\n    },\n    vitals_count: 8\n  }\n]\n\nexport function DoctorDashboard() {\n  const { profile } = useAuth()\n  const [patients, setPatients] = useState<PatientWithLatestVitals[]>([])\n  const [selectedPatient, setSelectedPatient] = useState<PatientWithLatestVitals | null>(null)\n  const [patientVitals, setPatientVitals] = useState<VitalsInput[]>([])\n  const [patientRisks, setPatientRisks] = useState<RiskPrediction[]>([])\n  const [loading, setLoading] = useState(true)\n  const [searchTerm, setSearchTerm] = useState('')\n\n  useEffect(() => {\n    if (profile) {\n      fetchPatients()\n    }\n  }, [profile, fetchPatients])\n\n  const fetchPatients = useCallback(async () => {\n    if (!profile) return\n\n    // Use mock data for demo\n    setPatients(mockPatients)\n    setLoading(false)\n  }, [profile])\n\n  const fetchPatientDetails = async (patient: PatientWithLatestVitals) => {\n    // Use mock data for demo\n    const mockPatientVitals = patient.latest_vitals ? [patient.latest_vitals] : []\n    const mockPatientRisks = patient.latest_risk ? [patient.latest_risk] : []\n    \n    setPatientVitals(mockPatientVitals)\n    setPatientRisks(mockPatientRisks)\n    setSelectedPatient(patient)\n  }\n\n  const getHighRiskPatients = () => {\n    return patients.filter(p => p.latest_risk?.risk_level === 'high')\n  }\n\n  const filteredPatients = patients.filter(patient =>\n    patient.full_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    patient.email.toLowerCase().includes(searchTerm.toLowerCase())\n  )\n\n  if (loading) {\n    return <LoadingSpinner />\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"gradient-bg border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">\n                Doctor Dashboard\n              </h1>\n              <p className=\"text-gray-600 mt-1\">\n                Welcome back, Dr. {profile?.full_name}\n              </p>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <div className=\"bg-white rounded-lg px-4 py-2 shadow-sm\">\n                <div className=\"flex items-center gap-2\">\n                  <Users className=\"w-5 h-5 text-primary-600\" />\n                  <span className=\"font-medium\">{patients.length} Patients</span>\n                </div>\n              </div>\n              {getHighRiskPatients().length > 0 && (\n                <div className=\"bg-danger-50 border border-danger-200 rounded-lg px-4 py-2\">\n                  <div className=\"flex items-center gap-2\">\n                    <AlertTriangle className=\"w-5 h-5 text-danger-600\" />\n                    <span className=\"font-medium text-danger-700\">\n                      {getHighRiskPatients().length} High Risk\n                    </span>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {selectedPatient ? (\n          /* Patient Detail View */\n          <div className=\"space-y-6\">\n            <div className=\"flex items-center justify-between\">\n              <button\n                onClick={() => setSelectedPatient(null)}\n                className=\"btn-secondary\"\n              >\n                ← Back to Patients\n              </button>\n              <div className=\"flex items-center gap-4\">\n                <h2 className=\"text-xl font-semibold text-gray-900\">\n                  {selectedPatient.full_name}\n                </h2>\n                {selectedPatient.latest_risk && (\n                  <RiskBadge \n                    risk={selectedPatient.latest_risk.risk_level}\n                    score={selectedPatient.latest_risk.risk_score}\n                  />\n                )}\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n              {/* Patient Info */}\n              <div className=\"card\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n                  Patient Information\n                </h3>\n                <div className=\"space-y-3\">\n                  <div>\n                    <p className=\"text-sm text-gray-600\">Email</p>\n                    <p className=\"font-medium\">{selectedPatient.email}</p>\n                  </div>\n                  {selectedPatient.last_period_date && (\n                    <div>\n                      <p className=\"text-sm text-gray-600\">Last Period</p>\n                      <p className=\"font-medium\">\n                        {new Date(selectedPatient.last_period_date).toLocaleDateString()}\n                      </p>\n                    </div>\n                  )}\n                  {selectedPatient.due_date && (\n                    <div>\n                      <p className=\"text-sm text-gray-600\">Due Date</p>\n                      <p className=\"font-medium\">\n                        {new Date(selectedPatient.due_date).toLocaleDateString()}\n                      </p>\n                    </div>\n                  )}\n                  <div>\n                    <p className=\"text-sm text-gray-600\">Total Entries</p>\n                    <p className=\"font-medium\">{selectedPatient.vitals_count}</p>\n                  </div>\n                </div>\n              </div>\n\n              {/* Latest Vitals */}\n              <div className=\"card\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n                  Latest Vitals\n                </h3>\n                {selectedPatient.latest_vitals ? (\n                  <div className=\"space-y-3\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">Blood Pressure</span>\n                      <span className=\"font-medium\">\n                        {selectedPatient.latest_vitals.systolic_bp}/{selectedPatient.latest_vitals.diastolic_bp}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">Heart Rate</span>\n                      <span className=\"font-medium\">\n                        {selectedPatient.latest_vitals.heart_rate} bpm\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">Weight</span>\n                      <span className=\"font-medium\">\n                        {selectedPatient.latest_vitals.weight} kg\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">Date</span>\n                      <span className=\"font-medium\">\n                        {new Date(selectedPatient.latest_vitals.date).toLocaleDateString()}\n                      </span>\n                    </div>\n                  </div>\n                ) : (\n                  <p className=\"text-gray-500\">No vitals recorded</p>\n                )}\n              </div>\n\n              {/* Risk Assessment */}\n              <div className=\"card\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n                  Risk Assessment\n                </h3>\n                {selectedPatient.latest_risk ? (\n                  <div className=\"space-y-4\">\n                    <RiskBadge \n                      risk={selectedPatient.latest_risk.risk_level}\n                      score={selectedPatient.latest_risk.risk_score}\n                    />\n                    {selectedPatient.latest_risk.factors.length > 0 && (\n                      <div>\n                        <p className=\"text-sm font-medium text-gray-700 mb-2\">\n                          Risk Factors:\n                        </p>\n                        <ul className=\"text-sm text-gray-600 space-y-1\">\n                          {selectedPatient.latest_risk.factors.map((factor, index) => (\n                            <li key={index} className=\"flex items-start gap-2\">\n                              <span className=\"w-1 h-1 bg-gray-400 rounded-full mt-2 flex-shrink-0\" />\n                              {factor}\n                            </li>\n                          ))}\n                        </ul>\n                      </div>\n                    )}\n                  </div>\n                ) : (\n                  <p className=\"text-gray-500\">No risk assessment available</p>\n                )}\n              </div>\n            </div>\n\n            {/* Charts */}\n            {patientVitals.length > 0 && (\n              <div className=\"space-y-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900\">Health Trends</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div className=\"card\">\n                    <Chart\n                      data={patientVitals.reverse().map(v => ({ date: v.date, value: v.systolic_bp }))}\n                      title=\"Systolic Blood Pressure\"\n                      color=\"#dc2626\"\n                      unit=\" mmHg\"\n                      height={250}\n                    />\n                  </div>\n                  <div className=\"card\">\n                    <Chart\n                      data={patientVitals.map(v => ({ date: v.date, value: v.heart_rate }))}\n                      title=\"Heart Rate\"\n                      color=\"#0ea5e9\"\n                      unit=\" bpm\"\n                      height={250}\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Recent Entries */}\n            <div className=\"card\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n                Recent Entries\n              </h3>\n              {patientVitals.length > 0 ? (\n                <div className=\"overflow-x-auto\">\n                  <table className=\"w-full text-sm\">\n                    <thead>\n                      <tr className=\"border-b border-gray-200\">\n                        <th className=\"text-left py-2\">Date</th>\n                        <th className=\"text-left py-2\">BP</th>\n                        <th className=\"text-left py-2\">HR</th>\n                        <th className=\"text-left py-2\">Weight</th>\n                        <th className=\"text-left py-2\">Symptoms</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {patientVitals.slice(0, 10).map((vital, index) => (\n                        <tr key={vital.id || index} className=\"border-b border-gray-100\">\n                          <td className=\"py-2\">\n                            {new Date(vital.date).toLocaleDateString()}\n                          </td>\n                          <td className=\"py-2\">\n                            {vital.systolic_bp}/{vital.diastolic_bp}\n                          </td>\n                          <td className=\"py-2\">{vital.heart_rate}</td>\n                          <td className=\"py-2\">{vital.weight} kg</td>\n                          <td className=\"py-2\">\n                            {vital.symptoms.length > 0 ? vital.symptoms.join(', ') : 'None'}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              ) : (\n                <p className=\"text-gray-500\">No entries found</p>\n              )}\n            </div>\n          </div>\n        ) : (\n          /* Patients List View */\n          <div className=\"space-y-6\">\n            {/* Search */}\n            <div className=\"flex items-center gap-4\">\n              <div className=\"relative flex-1 max-w-md\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\n                <input\n                  type=\"text\"\n                  placeholder=\"Search patients...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"input-field pl-10\"\n                />\n              </div>\n            </div>\n\n            {/* High Risk Alerts */}\n            {getHighRiskPatients().length > 0 && (\n              <div className=\"card border-l-4 border-l-danger-500\">\n                <div className=\"flex items-center gap-3 mb-4\">\n                  <AlertTriangle className=\"w-6 h-6 text-danger-600\" />\n                  <h3 className=\"text-lg font-semibold text-danger-700\">\n                    High Risk Patients\n                  </h3>\n                </div>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {getHighRiskPatients().map((patient) => (\n                    <div\n                      key={patient.id}\n                      className=\"p-4 bg-danger-50 border border-danger-200 rounded-lg cursor-pointer hover:bg-danger-100 transition-colors\"\n                      onClick={() => fetchPatientDetails(patient)}\n                    >\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <h4 className=\"font-medium text-danger-900\">\n                          {patient.full_name}\n                        </h4>\n                        <RiskBadge risk=\"high\" />\n                      </div>\n                      <p className=\"text-sm text-danger-700\">\n                        Last entry: {patient.latest_vitals ? \n                          new Date(patient.latest_vitals.date).toLocaleDateString() : \n                          'No data'\n                        }\n                      </p>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* All Patients */}\n            <div className=\"card\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n                All Patients ({filteredPatients.length})\n              </h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                {filteredPatients.map((patient) => (\n                  <div\n                    key={patient.id}\n                    className=\"p-4 border border-gray-200 rounded-lg cursor-pointer hover:border-primary-300 hover:bg-primary-50 transition-all\"\n                    onClick={() => fetchPatientDetails(patient)}\n                  >\n                    <div className=\"flex items-center justify-between mb-3\">\n                      <h4 className=\"font-medium text-gray-900\">\n                        {patient.full_name}\n                      </h4>\n                      {patient.latest_risk && (\n                        <RiskBadge risk={patient.latest_risk.risk_level} />\n                      )}\n                    </div>\n                    \n                    <div className=\"space-y-2 text-sm text-gray-600\">\n                      <p>{patient.email}</p>\n                      <div className=\"flex items-center justify-between\">\n                        <span>Entries: {patient.vitals_count}</span>\n                        {patient.latest_vitals && (\n                          <span>\n                            Last: {new Date(patient.latest_vitals.date).toLocaleDateString()}\n                          </span>\n                        )}\n                      </div>\n                      {patient.latest_vitals && (\n                        <div className=\"flex items-center gap-4 text-xs\">\n                          <span>BP: {patient.latest_vitals.systolic_bp}/{patient.latest_vitals.diastolic_bp}</span>\n                          <span>HR: {patient.latest_vitals.heart_rate}</span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n\n              {filteredPatients.length === 0 && (\n                <div className=\"text-center py-8\">\n                  <Users className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n                  <p className=\"text-gray-500\">\n                    No patients found\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}","import { useState } from 'react'\nimport { useAuth } from '../../contexts/AuthContext'\nimport { LoadingSpinner } from '../ui/LoadingSpinner'\nimport { User, Mail, Calendar, Heart, Shield, Save } from 'lucide-react'\n\nexport function ProfileSettings() {\n  const { profile, updateProfile } = useAuth()\n  const [loading, setLoading] = useState(false)\n  const [success, setSuccess] = useState(false)\n  const [formData, setFormData] = useState({\n    full_name: profile?.full_name || '',\n    last_period_date: profile?.last_period_date || '',\n    due_date: profile?.due_date || '',\n    license_number: profile?.license_number || '',\n    specialization: profile?.specialization || '',\n  })\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setLoading(true)\n    setSuccess(false)\n\n    try {\n      const updates: any = {\n        full_name: formData.full_name,\n      }\n\n      if (profile?.role === 'patient') {\n        if (formData.last_period_date) updates.last_period_date = formData.last_period_date\n        if (formData.due_date) updates.due_date = formData.due_date\n      } else if (profile?.role === 'doctor') {\n        if (formData.license_number) updates.license_number = formData.license_number\n        if (formData.specialization) updates.specialization = formData.specialization\n      }\n\n      await updateProfile(updates)\n      setSuccess(true)\n      setTimeout(() => setSuccess(false), 3000)\n    } catch (error) {\n      console.error('Error updating profile:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  if (!profile) {\n    return <LoadingSpinner />\n  }\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-6\">\n      <div className=\"card\">\n        <div className=\"flex items-center gap-3 mb-6\">\n          <div className=\"p-2 bg-primary-100 rounded-lg\">\n            {profile.role === 'patient' ? (\n              <Heart className=\"w-6 h-6 text-primary-600\" />\n            ) : (\n              <Shield className=\"w-6 h-6 text-primary-600\" />\n            )}\n          </div>\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900\">Profile Settings</h1>\n            <p className=\"text-gray-600 capitalize\">{profile.role} Account</p>\n          </div>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          {/* Basic Information */}\n          <div className=\"space-y-4\">\n            <h2 className=\"text-lg font-semibold text-gray-900\">Basic Information</h2>\n            \n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                <User className=\"w-4 h-4 inline mr-1\" />\n                Full Name\n              </label>\n              <input\n                type=\"text\"\n                value={formData.full_name}\n                onChange={(e) => setFormData(prev => ({ ...prev, full_name: e.target.value }))}\n                className=\"input-field\"\n                required\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                <Mail className=\"w-4 h-4 inline mr-1\" />\n                Email\n              </label>\n              <input\n                type=\"email\"\n                value={profile.email}\n                className=\"input-field bg-gray-50\"\n                disabled\n              />\n              <p className=\"text-xs text-gray-500 mt-1\">\n                Email cannot be changed\n              </p>\n            </div>\n          </div>\n\n          {/* Role-specific fields */}\n          {profile.role === 'patient' && (\n            <div className=\"space-y-4\">\n              <h2 className=\"text-lg font-semibold text-gray-900\">Pregnancy Information</h2>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  <Calendar className=\"w-4 h-4 inline mr-1\" />\n                  Last Period Date\n                </label>\n                <input\n                  type=\"date\"\n                  value={formData.last_period_date}\n                  onChange={(e) => setFormData(prev => ({ ...prev, last_period_date: e.target.value }))}\n                  className=\"input-field\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  <Calendar className=\"w-4 h-4 inline mr-1\" />\n                  Due Date\n                </label>\n                <input\n                  type=\"date\"\n                  value={formData.due_date}\n                  onChange={(e) => setFormData(prev => ({ ...prev, due_date: e.target.value }))}\n                  className=\"input-field\"\n                />\n              </div>\n            </div>\n          )}\n\n          {profile.role === 'doctor' && (\n            <div className=\"space-y-4\">\n              <h2 className=\"text-lg font-semibold text-gray-900\">Professional Information</h2>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  <Shield className=\"w-4 h-4 inline mr-1\" />\n                  License Number\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.license_number}\n                  onChange={(e) => setFormData(prev => ({ ...prev, license_number: e.target.value }))}\n                  className=\"input-field\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  <Heart className=\"w-4 h-4 inline mr-1\" />\n                  Specialization\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.specialization}\n                  onChange={(e) => setFormData(prev => ({ ...prev, specialization: e.target.value }))}\n                  className=\"input-field\"\n                  placeholder=\"e.g., Gynecology, Obstetrics\"\n                />\n              </div>\n            </div>\n          )}\n\n          {/* Account Information */}\n          <div className=\"space-y-4\">\n            <h2 className=\"text-lg font-semibold text-gray-900\">Account Information</h2>\n            \n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Account Created\n                </label>\n                <p className=\"text-sm text-gray-600\">\n                  {new Date(profile.created_at).toLocaleDateString()}\n                </p>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Last Updated\n                </label>\n                <p className=\"text-sm text-gray-600\">\n                  {new Date(profile.updated_at).toLocaleDateString()}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* Success Message */}\n          {success && (\n            <div className=\"p-3 bg-success-50 border border-success-200 rounded-lg\">\n              <p className=\"text-success-600 text-sm\">\n                Profile updated successfully!\n              </p>\n            </div>\n          )}\n\n          {/* Submit Button */}\n          <button\n            type=\"submit\"\n            disabled={loading}\n            className=\"w-full btn-primary disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            {loading ? (\n              <div className=\"flex items-center justify-center gap-2\">\n                <LoadingSpinner size=\"sm\" />\n                <span>Saving...</span>\n              </div>\n            ) : (\n              <div className=\"flex items-center justify-center gap-2\">\n                <Save className=\"w-4 h-4\" />\n                <span>Save Changes</span>\n              </div>\n            )}\n          </button>\n        </form>\n      </div>\n    </div>\n  )\n}","import { Home, Activity, TrendingUp, User, LucideIcon } from 'lucide-react'\nimport { cn } from '../../lib/utils'\n\ninterface BottomNavigationProps {\n  activeTab: string\n  onTabChange: (tab: string) => void\n}\n\nconst tabs: Array<{ id: string; label: string; icon: LucideIcon }> = [\n  { id: 'home', label: 'Home', icon: Home },\n  { id: 'input', label: 'Input', icon: Activity },\n  { id: 'insights', label: 'Insights', icon: TrendingUp },\n  { id: 'profile', label: 'Profile', icon: User },\n]\n\nexport function BottomNavigation({ activeTab, onTabChange }: BottomNavigationProps) {\n  return (\n    <div className=\"fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 px-4 py-2 md:hidden\">\n      <div className=\"flex items-center justify-around\">\n        {tabs.map((tab) => {\n          const Icon = tab.icon\n          const isActive = activeTab === tab.id\n          \n          return (\n            <button\n              key={tab.id}\n              onClick={() => onTabChange(tab.id)}\n              className={cn(\n                'flex flex-col items-center gap-1 py-2 px-3 rounded-lg transition-colors',\n                isActive\n                  ? 'text-primary-600 bg-primary-50'\n                  : 'text-gray-600 hover:text-gray-900'\n              )}\n            >\n              <Icon className=\"w-5 h-5\" />\n              <span className=\"text-xs font-medium\">{tab.label}</span>\n            </button>\n          )\n        })}\n      </div>\n    </div>\n  )\n}","import { useAuth } from '../../contexts/AuthContext'\nimport { Users, AlertTriangle, User, LogOut, Heart, LucideIcon } from 'lucide-react'\nimport { cn } from '../../lib/utils'\n\ninterface SidebarProps {\n  activeTab: string\n  onTabChange: (tab: string) => void\n}\n\nconst tabs: Array<{ id: string; label: string; icon: LucideIcon }> = [\n  { id: 'dashboard', label: 'Dashboard', icon: Users },\n  { id: 'patients', label: 'Patients', icon: Users },\n  { id: 'alerts', label: 'Alerts', icon: AlertTriangle },\n  { id: 'profile', label: 'Profile', icon: User },\n]\n\nexport function Sidebar({ activeTab, onTabChange }: SidebarProps) {\n  const { signOut, profile } = useAuth()\n\n  const handleSignOut = async () => {\n    try {\n      await signOut()\n    } catch (error) {\n      console.error('Error signing out:', error)\n    }\n  }\n\n  return (\n    <div className=\"hidden md:flex md:flex-col md:w-64 md:fixed md:inset-y-0 bg-white border-r border-gray-200\">\n      <div className=\"flex flex-col flex-1\">\n        {/* Logo */}\n        <div className=\"flex items-center gap-3 px-6 py-4 border-b border-gray-200\">\n          <div className=\"p-2 bg-primary-600 rounded-lg\">\n            <Heart className=\"w-6 h-6 text-white\" />\n          </div>\n          <div>\n            <h1 className=\"text-lg font-bold text-gray-900\">HyHTech</h1>\n            <p className=\"text-xs text-gray-600\">Doctor Portal</p>\n          </div>\n        </div>\n\n        {/* Navigation */}\n        <nav className=\"flex-1 px-4 py-6 space-y-2\">\n          {tabs.map((tab) => {\n            const Icon = tab.icon\n            const isActive = activeTab === tab.id\n            \n            return (\n              <button\n                key={tab.id}\n                onClick={() => onTabChange(tab.id)}\n                className={cn(\n                  'w-full flex items-center gap-3 px-3 py-2 rounded-lg text-left transition-colors',\n                  isActive\n                    ? 'bg-primary-50 text-primary-700 border border-primary-200'\n                    : 'text-gray-700 hover:bg-gray-50 hover:text-gray-900'\n                )}\n              >\n                <Icon className=\"w-5 h-5\" />\n                <span className=\"font-medium\">{tab.label}</span>\n              </button>\n            )\n          })}\n        </nav>\n\n        {/* User Info & Sign Out */}\n        <div className=\"px-4 py-4 border-t border-gray-200\">\n          <div className=\"flex items-center gap-3 mb-3\">\n            <div className=\"w-8 h-8 bg-primary-100 rounded-full flex items-center justify-center\">\n              <User className=\"w-4 h-4 text-primary-600\" />\n            </div>\n            <div className=\"flex-1 min-w-0\">\n              <p className=\"text-sm font-medium text-gray-900 truncate\">\n                Dr. {profile?.full_name}\n              </p>\n              <p className=\"text-xs text-gray-500 truncate\">\n                {profile?.email}\n              </p>\n            </div>\n          </div>\n          \n          <button\n            onClick={handleSignOut}\n            className=\"w-full flex items-center gap-3 px-3 py-2 text-gray-700 hover:bg-gray-50 rounded-lg transition-colors\"\n          >\n            <LogOut className=\"w-4 h-4\" />\n            <span className=\"text-sm font-medium\">Sign Out</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}","import { useState } from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { AuthProvider, useAuth } from './contexts/AuthContext'\nimport { AuthForm } from './components/auth/AuthForm'\nimport { PatientDashboard } from './components/patient/PatientDashboard'\nimport { DoctorDashboard } from './components/doctor/DoctorDashboard'\nimport { ProfileSettings } from './components/profile/ProfileSettings'\nimport { BottomNavigation } from './components/layout/BottomNavigation'\nimport { Sidebar } from './components/layout/Sidebar'\nimport { LoadingScreen } from './components/ui/LoadingSpinner'\nimport { VitalsForm } from './components/patient/VitalsForm'\n\nfunction AppContent() {\n  const { user, profile, loading } = useAuth()\n  const [activeTab, setActiveTab] = useState('home')\n\n  if (loading) {\n    return <LoadingScreen />\n  }\n\n  if (!user || !profile) {\n    return <AuthForm />\n  }\n\n  const renderPatientContent = () => {\n    switch (activeTab) {\n      case 'home':\n        return <PatientDashboard />\n      case 'input':\n        return (\n          <div className=\"min-h-screen bg-gray-50 p-4 pb-20 md:pb-4\">\n            <div className=\"max-w-2xl mx-auto pt-8\">\n              <VitalsForm onSubmit={() => setActiveTab('home')} />\n            </div>\n          </div>\n        )\n      case 'insights':\n        return <PatientDashboard />\n      case 'profile':\n        return (\n          <div className=\"min-h-screen bg-gray-50 pb-20 md:pb-4\">\n            <ProfileSettings />\n          </div>\n        )\n      default:\n        return <PatientDashboard />\n    }\n  }\n\n  const renderDoctorContent = () => {\n    switch (activeTab) {\n      case 'dashboard':\n      case 'patients':\n      case 'alerts':\n        return <DoctorDashboard />\n      case 'profile':\n        return <ProfileSettings />\n      default:\n        return <DoctorDashboard />\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {profile.role === 'doctor' && (\n        <Sidebar activeTab={activeTab} onTabChange={setActiveTab} />\n      )}\n      \n      <div className={profile.role === 'doctor' ? 'md:ml-64' : ''}>\n        {profile.role === 'patient' ? renderPatientContent() : renderDoctorContent()}\n      </div>\n\n      {profile.role === 'patient' && (\n        <BottomNavigation activeTab={activeTab} onTabChange={setActiveTab} />\n      )}\n    </div>\n  )\n}\n\nfunction App() {\n  return (\n    <Router>\n      <AuthProvider>\n        <AppContent />\n      </AuthProvider>\n    </Router>\n  )\n}\n\nexport default App","import * as React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App.tsx'\nimport './index.css'\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n)"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","AuthContext","createContext","useAuth","context","useContext","mockUsers","mockProfiles","AuthProvider","children","user","setUser","useState","profile","setProfile","loading","setLoading","useEffect","savedUser","savedProfile","value","email","password","fullName","role","additionalData","__async","u","mockUser","mockProfile","__spreadValues","existingUser","existingProfile","updates","updatedProfile","__spreadProps","profileIndex","jsx","cn","inputs","twMerge","clsx","calculateWeeksPregnant","lastPeriodDate","diffTime","diffDays","getRiskColor","risk","LoadingSpinner","size","className","sizeClasses","LoadingScreen","jsxs","AuthForm","isLogin","setIsLogin","setEmail","setPassword","setFullName","setRole","showPassword","setShowPassword","error","setError","setLastPeriodDate","dueDate","setDueDate","licenseNumber","setLicenseNumber","specialization","setSpecialization","signIn","signUp","handleSubmit","err","Heart","Fragment","Shield","EyeOff","Eye","API_BASE_URL","enhancedClinicalModel","input","riskScore","factors","prediction","riskLevel","result","predictHDPRisk","vitals","response","data","apiError","basicRisk","basicFactors","SYMPTOM_OPTIONS","VitalsForm","onSubmit","formData","setFormData","handleSymptomChange","symptom","checked","prev","s","vitalsData","riskPrediction","Activity","Weight","AlertCircle","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Chart","title","color","unit","height","chartData","point","options","Line","RiskBadge","score","getRiskIcon","CheckCircle","AlertTriangle","XCircle","getRiskText","mockVitals","mockRisk","PatientDashboard","setVitals","latestRisk","setLatestRisk","trendData","setTrendData","showVitalsForm","setShowVitalsForm","fetchVitals","useCallback","generateTrendData","fetchLatestRisk","latestVitals","trends","vital","date","handleVitalsSubmit","newVitals","updatedVitals","getWeeksPregnant","handleContactDoctor","weeksPregnant","_a","Baby","MessageCircle","TrendingUp","Calendar","factor","index","mockPatients","DoctorDashboard","patients","setPatients","selectedPatient","setSelectedPatient","patientVitals","setPatientVitals","patientRisks","setPatientRisks","searchTerm","setSearchTerm","fetchPatients","fetchPatientDetails","patient","mockPatientVitals","mockPatientRisks","getHighRiskPatients","filteredPatients","Users","v","Search","ProfileSettings","updateProfile","success","setSuccess","User","Mail","Save","tabs","Home","BottomNavigation","activeTab","onTabChange","tab","Icon","isActive","Sidebar","signOut","handleSignOut","LogOut","AppContent","setActiveTab","renderPatientContent","renderDoctorContent","App","Router","ReactDOM","React.StrictMode"],"mappings":"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","x_google_ignoreList":[0,1,2]}